import re
match = re.match('/(.*)/(.*)/(.*)', '/usr/home/lumberjack')
print(match.group())

L = [123, 'spam', 1.23]    # Список из трех объектов разных типов
print(len(L))        # Число элементов в списке

print(L[0])   #вывод элемента 0
print(L[:-1])   #минус последний элемент
print(L + [4,5,6])  #добавляем элементы к списку
print(L)   #но список остается не изменным после всех вышеупомянутых действий

L.append("ni")  #Добавляет элемент в конец массива
L.pop(0)    #удаляет указанный в скобках элемент
del L[1]    #удаляет указанный в скобках элемент

L.sort()    #сортирует по порядку
L.reverse()   #сортирует от увеличения

m = [[1, 2, 3], #matrix [3][3]
     [4, 5, 6],
     [7, 8, 9]]

print(m[2][2]) #*matrix [2][2]

col2 = [row[1] for row in m]    #Выбирает элементы второго столбца
print(col2)

col3 = [row[2]+1 for row in m]  #создает список col3 со значениями m[row][2]
print(col3)

col4 = [riw[0] for riw in m if riw[0] % 2 == 0]   #создает список col4 со значениями m[row][0] Только четными значениями
print(col4)

diag = [m[i][i] for i in [0, 1, 2]]   #выборка элементов по диагонали, т.е. m[0][0], m[1][1], m[2][2],
print(diag)

doubles = [i * 2 for i in 'spam']   #дублирование символов в строке
print(doubles)

print(list(map(sum, m)))    #сумма все m[0] m[1] m[2]

a = [ord(x) for x in "alisa"]     #Завела список из значений кодов символов
print(a)

a = {ord(x) for x in "alisa"}   #без дубликатов
print(a)

a = {x: ord(x) for x in "alisa"}    #ключи словарей являются уникальными
