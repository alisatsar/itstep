#include <iostream>

struct A
{
	A()
	{
		std::cout << "A default constructor." << std::endl;
	}

	A(const int& i)
	{
		std::cout << i << std::endl;
	}

};

struct B
{
	B(A a)
	{
	}
};

int main()
{
	int foo;

	{
		void foo();
		foo();
	}

	A a(); //понимает как прототип функции возвращающей объект A

	A a1;//вызов дефолтного конструктора

	//();ошибка т.к. должно быть какое-то вычислимое выражение

	(42);

	A a2({});//вызовется, пустой список инициализации
	//по умолчанию инициалируется 0
	//Выведет 0

	A a3({ 34 });

	A a4{};//конструктор по умолчанию

	int i = 1;

	B b(A(i));//прототип функции возвращающей B, с параметром i типа A
	B b2(A{ i });//правильно так объявлять через фигурную инициализацию
	B b3((A(i)));//или так до С++11
	B b1(A(1));//выведет 1

	//контекст парсинга
	A(x);//создаст обект x типа А
	//равносильно 
	A x3;
	
	return 0;
}

void foo()
{
	std::cout << "foo" << std::endl;
}
